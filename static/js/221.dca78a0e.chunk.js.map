{"version":3,"file":"static/js/221.dca78a0e.chunk.js","mappings":"sRAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,IAAPD,CAAH,qhBAuBRE,EAAQF,EAAAA,GAAAA,GAAH,kHAiBLG,GAVOH,EAAAA,GAAAA,EAAH,2KAUOA,EAAAA,GAAAA,EAAH,mU,SCpCfI,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IA0CxB,EAxCa,WACX,OAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAc,mCAAG,8GAEEC,EAAAA,EAAAA,MAFF,OAEbH,EAFa,OAGnBC,EAAUD,EAAOI,SAHE,gDAKnBC,QAAQC,IAAR,MALmB,yDAAH,qDAYpB,OAHAC,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,KAED,UAACM,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXC,OAAO,QAJT,WAME,SAACjB,EAAD,gDACA,SAAC,EAAAkB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAClB,EAAD,CAAYmB,MAAOhB,OAErB,UAACQ,EAAA,EAAD,CACES,GAAG,MACHR,QAAQ,OACRE,WAAW,SACXO,UAAU,OACVC,cAAc,OALhB,WAOE,SAAC3B,EAAD,KACA,SAACI,EAAD,CAAUwB,KAAK,8BAAf,2BAIP,C,2NC9CKC,EAAU,mCACVC,EAAW,+BAAjB,SAEenB,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6FACQoB,EADR,UACiBD,EADjB,qCACsDD,GADtD,SAGyBG,EAAAA,EAAAA,IAAUD,GAHnC,cAGQE,EAHR,yBAISA,EAASC,MAJlB,kEAOA,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,oBACcP,EADd,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBG,EAAc,mCAAG,WAAMD,GAAN,uFACEJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,4BACsBP,EADtB,oBADF,cACfI,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOdI,EAAiB,mCAAG,WAAMF,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,4BACsBP,EADtB,2BADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBK,EAAgB,mCAAG,WAAOC,EAAOC,GAAd,uFACAT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,gCAC8CY,EAD9C,kBAC4DD,IAF5D,cACjBP,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,wDAOhBQ,EAAiB,mCAAG,WAAMN,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,2BACqBP,EADrB,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/MoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { CgCopyright } from 'react-icons/cg';\n\nexport const CopyIcon = styled(CgCopyright)`\n  width: 35px;\n  height: 35px;\n  color: #fff;\n  margin-right: 5px;\n  animation: rotate-scale-up-ver 3s ease-in-out infinite;\n\n  @keyframes rotate-scale-up-ver {\n    0% {\n      -webkit-transform: scale(1) rotateY(0);\n      transform: scale(1) rotateY(0);\n    }\n    50% {\n      -webkit-transform: scale(1.2) rotateY(360deg);\n      transform: scale(1.2) rotateY(360deg);\n    }\n    100% {\n      -webkit-transform: scale(1) rotateY(360deg);\n      transform: scale(1) rotateY(360deg);\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  color: white;\n  text-align: center;\n  text-transform: uppercase;\n  padding: 30px 0;\n`;\n\nexport const Text = styled.p`\n  max-width: 600px;\n  font-weight: bold;\n  font-size: 15px;\n  padding: 10px;\n  text-align: center;\n  color: #e0e0e0;\n  letter-spacing: 1px;\n`;\n\nexport const TextLink = styled.a`\n  font-weight: bold;\n  font-size: 15px;\n  text-align: center;\n  color: #e0e0e0;\n  letter-spacing: 1px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: orangered;\n  }\n`;\n","import Box from 'components/Box';\nimport { useState, useEffect } from 'react';\nimport { Suspense, lazy } from 'react';\n\nimport Loader from 'components/Loader';\nimport { fetchMovies } from 'services/MoviesApi';\nimport { TextLink, CopyIcon, Title } from './Home.styled';\nconst MoviesList = lazy(() => import('components/MoviesList'));\n\nconst Home = () => {\n  const [movies, setMovies] = useState();\n\n  const getFetchMovies = async () => {\n    try {\n      const movies = await fetchMovies();\n      setMovies(movies.results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getFetchMovies();\n  }, []);\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      height=\"100vh\"\n    >\n      <Title>20 Most Popular Movies Right Now</Title>\n      <Suspense fallback={<Loader />}>\n        <MoviesList items={movies} />\n      </Suspense>\n      <Box\n        as=\"div\"\n        display=\"flex\"\n        alignItems=\"center\"\n        marginTop=\"auto\"\n        paddingBottom=\"10px\"\n      >\n        <CopyIcon />\n        <TextLink href=\"https://github.com/DimaHavr\">DimaHavr</TextLink>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst API_KEY = 'b1c3a2089fd706f08956c6d7f55cc574';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies() {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n\n  const response = await axios.get(url);\n  return response.data;\n}\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport {\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchSearchMovie,\n  fetchMovieTrailer,\n};\n"],"names":["CopyIcon","styled","CgCopyright","Title","TextLink","MoviesList","lazy","useState","movies","setMovies","getFetchMovies","fetchMovies","results","console","log","useEffect","Box","display","flexDirection","alignItems","height","Suspense","fallback","Loader","items","as","marginTop","paddingBottom","href","API_KEY","BASE_URL","url","axios","response","data","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","fetchSearchMovie","query","page","fetchMovieTrailer"],"sourceRoot":""}