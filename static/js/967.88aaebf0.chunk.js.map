{"version":3,"file":"static/js/967.88aaebf0.chunk.js","mappings":"8TAMaA,EAAeC,EAAAA,GAAAA,IAAH,8NAYZC,EAAQD,EAAAA,GAAAA,GAAH,uIAQLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,yDAKJI,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAPL,CAAH,yDAKXM,GAAWN,EAAAA,EAAAA,IAAOO,EAAAA,IAAPP,CAAH,yDAURQ,IALcR,EAAAA,EAAAA,IAAOS,EAAAA,IAAPT,CAAH,yDAKLA,EAAAA,GAAAA,IAAH,gDAIHU,EAAWV,EAAAA,GAAAA,EAAH,gMAWRW,EAAOX,EAAAA,GAAAA,EAAH,2LAUJY,EAAOZ,EAAAA,GAAAA,KAAH,iEAKJa,GAAWb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,2RA4BRe,GAdaf,EAAAA,GAAAA,EAAH,2RAcAA,EAAAA,GAAAA,IAAH,oF,mBCpGdgB,GAAahB,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,oSAyBhB,EATwB,SAAC,GAAsB,IAApBiB,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACF,EAAD,CAAYC,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,oBC+DD,EAtEqB,WAAO,IAAD,IACnBE,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAY,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACrCC,EAA6DL,EAA7DK,MAAOC,EAAsDN,EAAtDM,SAAUC,EAA4CP,EAA5CO,aAAcC,EAA8BR,EAA9BQ,YAAaC,EAAiBT,EAAjBS,aAC9CC,EAAU,0CAAsCF,GActD,OAZAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEEC,EAAAA,EAAAA,IAAkBhB,GAFpB,OAEbG,EAFa,OAGnBC,EAAUD,GAHS,gDAKnBc,QAAQC,IAAR,MALmB,yDAAH,qDAQpBH,GACD,GAAE,CAACf,KAGF,2BACE,UAACmB,EAAA,EAAD,CAAKC,GAAG,UAAUC,WAAW,OAAOC,UAAU,SAA9C,WACE,UAACH,EAAA,EAAD,CAAKI,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAAtD,WACE,SAAC,EAAD,CAAU9B,GAAIU,EAAd,6BACA,UAAC5B,EAAD,WACGkC,GACC,SAACzB,EAAD,CAAKwC,IAAKb,EAAYc,MAAM,MAAMC,OAAO,MAAMC,IAAI,MAEnD,6CAEF,UAACV,EAAA,EAAD,CAAKI,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAAtD,WACE,UAAC9C,EAAD,WACG6B,IAAgB,oCAChBI,IACC,UAACxB,EAAD,YACE,SAACR,EAAD,IACCgC,EAAakB,QAAQ,SAI3BpB,IACC,UAACrB,EAAD,6BACgB,SAACC,EAAD,UAAOoB,OAGxBD,IACC,UAACpB,EAAD,yBACY,kBADZ,KACmB,SAACC,EAAD,UAAOmB,QAG5B,UAAChB,EAAD,CAAS8B,QAAQ,OAAOQ,IAAI,KAA5B,WACE,UAACxC,EAAD,CAAUI,GAAG,OAAOW,MAAO,CAAEC,KAAMF,GAAnC,WACE,SAACrB,EAAD,IADF,YAGA,UAACO,EAAD,CAAUI,GAAG,UAAUW,MAAO,CAAEC,KAAMF,GAAtC,WACE,SAACvB,EAAD,IADF,2BAOR,SAAC,EAAAkD,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAKT,C,4MCtFcC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,4LAGyBC,EAAAA,EAAAA,IAHzB,wGAGQC,EAHR,yBAISA,EAASC,MAJlB,kEAOA,IAAMtB,EAAiB,mCAAG,WAAMhB,GAAN,uFACDoC,EAAAA,EAAAA,IAAA,6CACiBpC,EADjB,6DADC,cAClBqC,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBC,EAAc,mCAAG,WAAMvC,GAAN,uFACEoC,EAAAA,EAAAA,IAAA,6CACiBpC,EADjB,qEADF,cACfqC,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOdE,EAAiB,mCAAG,WAAMxC,GAAN,uFACDoC,EAAAA,EAAAA,IAAA,6CACiBpC,EADjB,4EADC,cAClBqC,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBG,EAAgB,mCAAG,WAAMC,GAAN,uFACAN,EAAAA,EAAAA,IAAA,yHAC6FM,IAF7F,cACjBL,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx","services/MoviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { RiMovie2Line, RiTeamFill } from 'react-icons/ri';\nimport { AiFillYoutube } from 'react-icons/ai';\nimport { MdReviews } from 'react-icons/md';\nimport styled from 'styled-components';\n\nexport const MovieWrapper = styled.div`\n  padding: 0px 10px;\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    gap: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  padding: 10px 0;\n  display: flex;\n  gap: 10px;\n  flex-direction: column-reverse;\n  align-items: center;\n`;\n\nexport const Icon = styled(RiMovie2Line)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const ReviewsIcon = styled(MdReviews)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const CastIcon = styled(RiTeamFill)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const TrailerIcon = styled(AiFillYoutube)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n`;\n\nexport const TextVote = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  background-color: #000000;\n  color: white;\n  padding: 10px 12px;\n  border-radius: 5px;\n  font-size: 16px;\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  font-weight: 700;\n  font-size: 16px;\n  max-width: 600px;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n`;\nexport const Span = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n`;\n\nexport const TextLink = styled(Link)`\n  cursor: pointer;\n  display: flex;\n  text-transform: uppercase;\n  align-items: center;\n  color: white;\n  text-decoration-line: none;\n  gap: 5px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const LinkStyled = styled.a`\n  cursor: pointer;\n  display: flex;\n  text-transform: uppercase;\n  align-items: center;\n  color: white;\n  text-decoration-line: none;\n  gap: 5px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n  gap: 25px;\n  padding: 20px 0 40px 0;\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 20px 0;\n  color: white;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieDetails } from 'services/MoviesApi';\nimport {\n  Title,\n  Img,\n  Text,\n  TextLink,\n  TextVote,\n  Span,\n  Icon,\n  ReviewsIcon,\n  LinkBox,\n  CastIcon,\n  MovieWrapper,\n} from './MovieDetails.styled';\nimport BackLink from '../../components/BackLink';\nimport Box from 'components/Box';\nimport Loader from 'components/Loader';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { id } = useParams();\n  const [movies, setMovies] = useState([]);\n  const backLinkHref = location.state?.from ?? '/';\n  const { title, overview, release_date, poster_path, vote_average } = movies;\n  const posterPath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n\n  useEffect(() => {\n    const getFetchMovies = async () => {\n      try {\n        const movies = await fetchMovieDetails(id);\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getFetchMovies();\n  }, [id]);\n\n  return (\n    <main>\n      <Box as=\"section\" paddingTop=\"20px\" textAlign=\"center\">\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <BackLink to={backLinkHref}>Back to movies</BackLink>\n          <MovieWrapper>\n            {poster_path ? (\n              <Img src={posterPath} width=\"300\" height=\"450\" alt=\"\" />\n            ) : (\n              <p>Poster not found</p>\n            )}\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n              <Title>\n                {title ? title : <p>Not info</p>}\n                {vote_average && (\n                  <TextVote>\n                    <Icon />\n                    {vote_average.toFixed(1)}\n                  </TextVote>\n                )}\n              </Title>\n              {release_date && (\n                <Text>\n                  Release date: <Span>{release_date}</Span>\n                </Text>\n              )}\n              {overview && (\n                <Text>\n                  Overview: <br /> <Span>{overview}</Span>\n                </Text>\n              )}\n              <LinkBox display=\"flex\" gap=\"30\">\n                <TextLink to=\"cast\" state={{ from: backLinkHref }}>\n                  <CastIcon /> Cast\n                </TextLink>\n                <TextLink to=\"reviews\" state={{ from: backLinkHref }}>\n                  <ReviewsIcon /> Reviews\n                </TextLink>\n              </LinkBox>\n            </Box>\n          </MovieWrapper>\n        </Box>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Box>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nasync function fetchMovies() {\n  const url = `https://api.themoviedb.org/3/trending/all/day?api_key=b1c3a2089fd706f08956c6d7f55cc574`;\n\n  const response = await axios.get(url);\n  return response.data;\n}\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=b1c3a2089fd706f08956c6d7f55cc574&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=b1c3a2089fd706f08956c6d7f55cc574&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=b1c3a2089fd706f08956c6d7f55cc574&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=b1c3a2089fd706f08956c6d7f55cc574&language=en-US&page=1&query=${query}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchSearchMovie,\n};\n"],"names":["MovieWrapper","styled","Title","Icon","RiMovie2Line","ReviewsIcon","MdReviews","CastIcon","RiTeamFill","Img","AiFillYoutube","TextVote","Text","Span","TextLink","Link","LinkBox","StyledLink","to","children","size","location","useLocation","id","useParams","useState","movies","setMovies","backLinkHref","state","from","title","overview","release_date","poster_path","vote_average","posterPath","useEffect","getFetchMovies","fetchMovieDetails","console","log","Box","as","paddingTop","textAlign","display","flexDirection","alignItems","src","width","height","alt","toFixed","gap","Suspense","fallback","Loader","fetchMovies","axios","response","data","fetchMovieCast","fetchMovieReviews","fetchSearchMovie","query"],"sourceRoot":""}