{"version":3,"file":"static/js/483.8635f136.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movie.styled.js","pages/Movies/Movies.jsx","services/MoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const SearchIcon = styled(BsSearch)`\n  width: 30px;\n  height: 30px;\n  @media screen and (max-width: 767px) {\n    width: 25px;\n    height: 25px;\n  }\n`;\n\nexport const Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  gap: 10px;\n  padding: 10px;\n\n  @media screen and (max-width: 767px) {\n    align-items: center;\n    gap: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  text-indent: 5px;\n  width: 280px;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  border: 2px solid #000;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    color: #000;\n    outline: 2px solid #000;\n    border-radius: 5px;\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 200px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  text-decoration: none;\n  color: white;\n  background: linear-gradient(#1b1b1b, #111);\n  font-weight: 500;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: darkslategrey;\n  }\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n\n  @media screen and (max-width: 767px) {\n    padding: 6px 16px;\n  }\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { Wrapper, Input, Button, SearchIcon } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [movieName, setMovieName] = useState('');\n\n  const handleSubmit = event => {\n    if (movieName.trim() === '') {\n      Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n    event.preventDefault();\n    onSubmit(movieName);\n    onReset(event);\n  };\n\n  const onChangeInput = event => {\n    setMovieName(event.target.value);\n  };\n\n  const onReset = event => {\n    setMovieName('');\n    event.target.reset();\n  };\n\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search here...\"\n        value={movieName}\n        onChange={onChangeInput}\n      />\n      <Button type=\"submit\">\n        <SearchIcon />\n      </Button>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1 1 1;\n  justify-content: center;\n  gap: 35px;\n  align-items: flex-start;\n  list-style-type: none;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    flex: 1 1 1;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    transform: scale(1.01);\n  }\n`;\n\nexport const BoxLink = styled(Link)`\n  text-decoration: none;\n  text-decoration-line: none;\n  text-align: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nexport const Subtitle = styled.h3`\n  padding: 10px;\n  color: #fff;\n  max-width: 230px;\n  margin: 0 auto;\n\n  :hover,\n  :focus {\n    color: orangered;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchSearchMovie } from 'services/MoviesApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport Box from 'components/Box';\nimport Loader from 'components/Loader';\nimport Stack from '@mui/material/Stack';\nimport SearchBox from 'components/SearchBox';\nimport Pagination from '@mui/material/Pagination';\nimport { List, BoxLink, Item, Img, Subtitle } from './Movie.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [moviesArray, setMoviesArray] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [preLoader, setPreLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getFetchSearchListMovies = async () => {\n      setPreLoader(true);\n      try {\n        const moviesArray = await fetchSearchMovie(movieName, page);\n        const totalMovies = moviesArray.total_results;\n        setTotalPages(moviesArray.total_pages);\n        if (totalMovies === 0) {\n          Notify.failure(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        }\n        setPreLoader(false);\n        setMoviesArray(moviesArray.results);\n      } catch (error) {\n        console.log(error);\n        setPreLoader(false);\n      }\n    };\n    if (!movieName) {\n      return;\n    }\n    getFetchSearchListMovies();\n  }, [movieName, page]);\n\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handleInputSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : '');\n    setPage(1);\n  };\n\n  return (\n    <main>\n      <Box as=\"section\" paddingTop=\"20px\">\n        <Box>\n          <SearchBox onSubmit={handleInputSubmit} />\n          {preLoader && <Loader />}\n          <List>\n            {moviesArray &&\n              moviesArray.map(({ id, title, poster_path }) => {\n                const posterPath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n                return (\n                  <Item key={id}>\n                    <BoxLink to={`${id}`} state={{ from: location }}>\n                      <Img\n                        src={posterPath}\n                        alt={title}\n                        width=\"300\"\n                        height=\"450\"\n                      />\n                      <Subtitle>{title}</Subtitle>\n                    </BoxLink>\n                  </Item>\n                );\n              })}\n          </List>\n          {totalPages > 1 && (\n            <Stack spacing={2}>\n              <Pagination\n                count={totalPages}\n                page={page}\n                onChange={handleChange}\n              />\n            </Stack>\n          )}\n        </Box>\n      </Box>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = 'b1c3a2089fd706f08956c6d7f55cc574';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies() {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n\n  const response = await axios.get(url);\n  return response.data;\n}\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport {\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchSearchMovie,\n  fetchMovieTrailer,\n};\n"],"names":["SearchIcon","styled","BsSearch","Wrapper","Input","Button","onSubmit","useState","movieName","setMovieName","onReset","event","target","reset","trim","Notify","preventDefault","type","placeholder","value","onChange","List","Item","BoxLink","Link","Img","Subtitle","location","useLocation","moviesArray","setMoviesArray","page","setPage","totalPages","setTotalPages","preLoader","setPreLoader","useSearchParams","searchParams","setSearchParams","get","useEffect","getFetchSearchListMovies","fetchSearchMovie","totalMovies","total_results","total_pages","results","console","log","Box","as","paddingTop","query","Loader","map","id","title","poster_path","posterPath","to","state","from","src","alt","width","height","Stack","spacing","Pagination","count","API_KEY","BASE_URL","fetchMovies","url","axios","response","data","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchMovieTrailer"],"sourceRoot":""}