{"version":3,"file":"static/js/500.dc24114e.chunk.js","mappings":"kQAGaA,EAAOC,EAAAA,GAAAA,GAAH,iWAkBJC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8NAURG,EAAMH,EAAAA,GAAAA,IAAH,iEAKHI,EAAWJ,EAAAA,GAAAA,GAAH,uJ,SCErB,EAlCmB,WACjB,OAA4BK,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAc,mCAAG,8GAEEC,EAAAA,EAAAA,MAFF,OAEbH,EAFa,OAGnBC,EAAUD,EAAOI,SAHE,gDAKnBC,QAAQC,IAAR,MALmB,yDAAH,qDAapB,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,KAGD,2BACE,SAACT,EAAD,UACGO,GACCA,EAAOQ,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACvBC,EAAU,0CAAsCD,GACtD,OACE,UAACjB,EAAD,CAAmBmB,GAAE,kBAAaL,GAAlC,WACE,SAACZ,EAAD,CAAKkB,IAAKF,EAAYG,IAAI,GAAGC,MAAM,MAAMC,OAAO,SAChD,UAACpB,EAAD,sBAAYY,QAAZ,IAAYA,EAAAA,EAASC,OAFRF,EAKlB,OAIV,C,2NCnCKU,EAAU,mCACVC,EAAW,+BAAjB,SAEejB,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6FACQkB,EADR,UACiBD,EADjB,qCACsDD,GADtD,SAGyBG,EAAAA,EAAAA,IAAUD,GAHnC,cAGQE,EAHR,yBAISA,EAASC,MAJlB,kEAOA,IAAMC,EAAiB,mCAAG,WAAMhB,GAAN,uFACDa,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAX,EADA,oBACcU,EADd,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBE,EAAc,mCAAG,WAAMjB,GAAN,uFACEa,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAX,EADA,4BACsBU,EADtB,oBADF,cACfI,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOdG,EAAiB,mCAAG,WAAMlB,GAAN,uFACDa,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAX,EADA,4BACsBU,EADtB,2BADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBI,EAAgB,mCAAG,WAAOC,EAAOC,GAAd,uFACAR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,gCAC8CW,EAD9C,kBAC4DD,IAF5D,cACjBN,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,wDAOhBO,EAAiB,mCAAG,WAAMtB,GAAN,uFACDa,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAX,EADA,2BACqBU,EADrB,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","services/MoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1 1 1;\n  justify-content: center;\n  gap: 35px;\n  list-style-type: none;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    flex: 1 1 1;\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  text-decoration-line: none;\n  text-align: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n  }\n`;\nexport const Img = styled.img`\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nexport const Subtitle = styled.h3`\n  padding: 10px;\n  color: #fff;\n  max-width: 230px;\n  margin: 0 auto;\n\n  :hover,\n  :focus {\n    color: orangered;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/MoviesApi';\nimport { List, ItemLink, Img, Subtitle } from './MoviesList.styled';\n\nconst MoviesList = () => {\n  const [movies, setMovies] = useState();\n\n  const getFetchMovies = async () => {\n    try {\n      const movies = await fetchMovies();\n      setMovies(movies.results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getFetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <List>\n        {movies &&\n          movies.map(({ id, title, name, poster_path }) => {\n            const posterPath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n            return (\n              <ItemLink key={id} to={`/movies/${id}`}>\n                <Img src={posterPath} alt=\"\" width=\"250\" height=\"350\" />\n                <Subtitle> {title ?? name}</Subtitle>\n              </ItemLink>\n            );\n          })}\n      </List>\n    </main>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\nconst API_KEY = 'b1c3a2089fd706f08956c6d7f55cc574';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies() {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n\n  const response = await axios.get(url);\n  return response.data;\n}\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport {\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchSearchMovie,\n  fetchMovieTrailer,\n};\n"],"names":["List","styled","ItemLink","Link","Img","Subtitle","useState","movies","setMovies","getFetchMovies","fetchMovies","results","console","log","useEffect","map","id","title","name","poster_path","posterPath","to","src","alt","width","height","API_KEY","BASE_URL","url","axios","response","data","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchSearchMovie","query","page","fetchMovieTrailer"],"sourceRoot":""}