{"version":3,"file":"static/js/368.572bcef1.chunk.js","mappings":"sTAIaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,IAAPD,CAAH,kOAaTE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,kOAaRI,GAAUJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAPL,CAAH,whBA4BPM,GAAaN,EAAAA,EAAAA,IAAOO,EAAAA,IAAPP,CAAH,6aA0BVQ,EAAgBR,EAAAA,GAAAA,IAAH,+GAObS,EAAiBT,EAAAA,GAAAA,IAAH,+CAIdU,EAAYV,EAAAA,GAAAA,MAAH,4cAqBTW,EAAaX,EAAAA,GAAAA,OAAH,6nBAiCVY,EAAwBZ,EAAAA,GAAAA,IAAH,+DAKrBa,EAAqBb,EAAAA,GAAAA,IAAH,6K,mBChE/B,EAtEkB,WAChB,OAA0Bc,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,gFACnBA,EAAMC,iBACNL,GAAa,GAFM,mBAKYM,EAAAA,EAAAA,IAC3BC,EAAAA,EACAd,EACAE,GARe,OAKXa,EALW,OAUXC,EAAOD,EAAeC,KAC5BC,EAAAA,OAAAA,QAAA,mBAA2BD,EAAKE,cAChCX,GAAa,GACbC,EAAS,KAbQ,kDAejBW,QAAQC,IAAI,KAAMC,SAClBJ,EAAAA,OAAAA,QAAe,2BACfV,GAAa,GAjBI,0DAAH,sDAqBlB,OACE,8BACGD,GACC,SAACgB,EAAA,EAAD,KAEA,SAAC7B,EAAD,WACE,kBAAM8B,SAAUb,EAAhB,WACE,UAAChB,EAAD,YACE,SAACV,EAAD,KACA,SAACW,EAAD,CACE6B,KAAK,QACLC,YAAY,QACZC,MAAO1B,EACP2B,SAAU,SAAAhB,GAAK,OAAIV,EAASU,EAAMiB,OAAOF,MAA1B,EACfG,UAAQ,QAGZ,UAAChC,EAAD,YACE,SAACV,EAAD,KACA,SAACO,EAAD,WACE,SAACC,EAAD,CACE6B,KAAMpB,EAAe,OAAS,WAC9BqB,YAAY,WACZC,MAAOxB,EACPyB,SAAU,SAAAhB,GAAK,OAAIR,EAAYQ,EAAMiB,OAAOF,MAA7B,EACfG,UAAQ,OAGZ,SAAC/B,EAAD,CACEgC,QAAS,kBAAMzB,GAAiBD,EAAvB,EADX,SAGGA,GAAe,SAACb,EAAD,KAAiB,SAACF,EAAD,UAGrC,SAACO,EAAD,CAAY4B,KAAK,SAAjB,yBAMX,EClFD,EAJc,WACZ,OAAO,SAAC,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { BiShowAlt, BiHide } from 'react-icons/bi';\nimport { MdOutlineMailOutline, MdVpnKey } from 'react-icons/md';\n\nexport const EmailIcon = styled(MdOutlineMailOutline)`\n  width: 27px;\n  height: 27px;\n  position: absolute;\n  left: 10px;\n  top: 36%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n  fill: darkslategrey;\n`;\n\nexport const PassIcon = styled(MdVpnKey)`\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  left: 10px;\n  top: 33%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n  fill: darkslategrey;\n`;\n\nexport const EyeIcon = styled(BiShowAlt)`\n  width: 25px;\n  height: 25px;\n  fill: #000;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    fill: darkslategrey;\n\n    @keyframes btn-animation {\n      0% {\n        transform: scale(1.05);\n      }\n      20% {\n        transform: scale(1.1);\n      }\n      100% {\n        transform: scale(1.13);\n      }\n    }\n    :active {\n      animation: btn-animation 1s ease-out;\n    }\n  }\n`;\n\nexport const EyeOffIcon = styled(BiHide)`\n  width: 25px;\n  height: 25px;\n  fill: #000;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    fill: darkslategrey;\n\n    @keyframes btn-animation {\n      0% {\n        transform: scale(1.05);\n      }\n      20% {\n        transform: scale(1.1);\n      }\n      100% {\n        transform: scale(1.13);\n      }\n    }\n    :active {\n      animation: btn-animation 1s ease-out;\n    }\n  }\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const FormInput = styled.input`\n  text-indent: 30px;\n  width: 300px;\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  border: none;\n  border: 2px solid #000;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    color: #000;\n    outline: 2px solid #000;\n    border-radius: 5px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  width: 100%;\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  text-decoration: none;\n  color: white;\n  background: linear-gradient(#1b1b1b, #111);\n  font-weight: 500;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: darkslategrey;\n  }\n\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n`;\n\nexport const ShowPasswordContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const ShowPasswordButton = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 38%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useNavigate } from 'react-router-dom';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from 'utils/firebase.config';\n\nimport {\n  FormContainer,\n  FormInput,\n  FormButton,\n  ShowPasswordContainer,\n  ShowPasswordButton,\n  EyeIcon,\n  EyeOffIcon,\n  EmailIcon,\n  PassIcon,\n  InputContainer,\n} from './LoginForm.styled';\nimport Loader from 'components/Loader';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [preLoader, setPreLoader] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setPreLoader(true);\n\n    try {\n      const userCredential = await signInWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      const user = userCredential.user;\n      Notify.success(`Welcome, ${user.displayName}`);\n      setPreLoader(false);\n      navigate('/');\n    } catch (error) {\n      console.log(error.message);\n      Notify.failure('Something went wrong...');\n      setPreLoader(false);\n    }\n  };\n\n  return (\n    <>\n      {preLoader ? (\n        <Loader />\n      ) : (\n        <FormContainer>\n          <form onSubmit={handleSubmit}>\n            <InputContainer>\n              <EmailIcon />\n              <FormInput\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={event => setEmail(event.target.value)}\n                required\n              />\n            </InputContainer>\n            <ShowPasswordContainer>\n              <PassIcon />\n              <InputContainer>\n                <FormInput\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={event => setPassword(event.target.value)}\n                  required\n                />\n              </InputContainer>\n              <ShowPasswordButton\n                onClick={() => setShowPassword(!showPassword)}\n              >\n                {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n              </ShowPasswordButton>\n            </ShowPasswordContainer>\n            <FormButton type=\"submit\">Login</FormButton>\n          </form>\n        </FormContainer>\n      )}\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["EmailIcon","styled","MdOutlineMailOutline","PassIcon","MdVpnKey","EyeIcon","BiShowAlt","EyeOffIcon","BiHide","FormContainer","InputContainer","FormInput","FormButton","ShowPasswordContainer","ShowPasswordButton","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","preLoader","setPreLoader","navigate","useNavigate","handleSubmit","event","preventDefault","signInWithEmailAndPassword","auth","userCredential","user","Notify","displayName","console","log","message","Loader","onSubmit","type","placeholder","value","onChange","target","required","onClick"],"sourceRoot":""}