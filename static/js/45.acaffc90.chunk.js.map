{"version":3,"file":"static/js/45.acaffc90.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/SearchPagination/SearchPagination.jsx","pages/Movies/Movies.jsx","services/MoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1 1 1;\n  justify-content: center;\n  gap: 35px;\n  list-style-type: none;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    flex: 1 1 1;\n  }\n`;\n\nexport const Item = styled.li`\n  text-decoration: none;\n  text-decoration-line: none;\n  text-align: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  animation: slide-in-fwd-center 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n  :hover,\n  :focus {\n    border-radius: 10px;\n    transform: scale(1.05);\n  }\n  @keyframes slide-in-fwd-center {\n    0% {\n      -webkit-transform: translateZ(-1400px);\n      transform: translateZ(-1400px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  padding: 10px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  animation: slide-in-fwd-center 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n  }\n  @keyframes slide-in-fwd-center {\n    0% {\n      -webkit-transform: translateZ(-1400px);\n      transform: translateZ(-1400px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  padding: 10px;\n  color: #fff;\n  max-width: 230px;\n  margin: 0 auto;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: orangered;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, Img, Subtitle } from './MoviesList.styled';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const handleImageError = e => {\n    e.target.src =\n      'https://games.24tv.ua/resources/photos/news/202212/2222579.jpg';\n  };\n\n  return (\n    <List>\n      {items &&\n        items.map(({ id, title, name, poster_path }) => {\n          const posterPath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={posterPath}\n                  alt=\"\"\n                  width=\"250\"\n                  height=\"350\"\n                  onError={handleImageError}\n                />\n                <Subtitle> {title ?? name}</Subtitle>\n              </Link>\n            </Item>\n          );\n        })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const SearchIcon = styled(BsSearch)`\n  width: 30px;\n  height: 30px;\n  @media screen and (max-width: 767px) {\n    width: 25px;\n    height: 25px;\n  }\n`;\n\nexport const Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  gap: 10px;\n  padding: 10px;\n\n  @media screen and (max-width: 767px) {\n    align-items: center;\n    gap: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  text-indent: 5px;\n  width: 280px;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  border: 2px solid #000;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    color: #000;\n    outline: 2px solid #000;\n    border-radius: 5px;\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 200px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  text-decoration: none;\n  color: white;\n  background: linear-gradient(#1b1b1b, #111);\n  font-weight: 500;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: darkslategrey;\n  }\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n\n  @media screen and (max-width: 767px) {\n    padding: 6px 16px;\n  }\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { Wrapper, Input, Button, SearchIcon } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [movieName, setMovieName] = useState('');\n\n  const handleSubmit = event => {\n    if (movieName.trim() === '') {\n      Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n    event.preventDefault();\n    onSubmit(movieName);\n    onReset(event);\n  };\n\n  const onChangeInput = event => {\n    setMovieName(event.target.value);\n  };\n\n  const onReset = event => {\n    setMovieName('');\n    event.target.reset();\n  };\n\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search here...\"\n        value={movieName}\n        onChange={onChangeInput}\n      />\n      <Button type=\"submit\">\n        <SearchIcon />\n      </Button>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n","import Stack from '@mui/material/Stack';\nimport Pagination from '@mui/material/Pagination';\n\nimport { styled } from '@mui/material/styles';\n\nconst StyledPagination = styled(Pagination)(() => ({\n  display: 'flex',\n  justifyContent: 'center',\n  gap: '10px',\n  paddingBottom: '50px',\n  '& .css-wjh20t-MuiPagination-ul': {\n    gap: '5px',\n  },\n  '& .css-19xm0h7-MuiButtonBase-root-MuiPaginationItem-root': {\n    color: '#fff',\n    borderColor: '#fff',\n  },\n  '& .css-19xm0h7-MuiButtonBase-root-MuiPaginationItem-root.Mui-selected': {\n    backgroundColor: '#000',\n  },\n  '& .css-1v2lvtn-MuiPaginationItem-root': {\n    color: '#fff',\n  },\n}));\n\nconst SearchPagination = ({ handleChange, page, totalPages }) => {\n  return (\n    <Stack spacing={2}>\n      <StyledPagination\n        variant=\"outlined\"\n        shape=\"rounded\"\n        count={totalPages}\n        page={page}\n        onChange={handleChange}\n      />\n    </Stack>\n  );\n};\n\nexport default SearchPagination;\n","import { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from 'services/MoviesApi';\nimport { Notify } from 'notiflix';\nimport Box from 'components/Box';\nimport Loader from 'components/Loader';\nimport SearchBox from 'components/SearchBox';\nimport SearchPagination from 'components/SearchPagination';\nimport MoviesList from 'components/MoviesList';\n\nconst Movies = () => {\n  const [preLoader, setPreLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const listRef = useRef(null);\n\n  const [searchQuery, setSearchQuery] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem('searchQuery')) ??\n      searchParams.get('query') ??\n      ''\n    );\n  });\n  const [moviesArray, setMoviesArray] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('moviesArray')) ?? [];\n  });\n  const [page, setPage] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('page')) ?? 1;\n  });\n  const [totalPages, setTotalPages] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('totalPages')) ?? 0;\n  });\n\n  const setLocalStorage = (key, value) => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  useEffect(() => {\n    setLocalStorage('totalPages', totalPages);\n    setLocalStorage('page', page);\n    setLocalStorage('moviesArray', moviesArray);\n    setLocalStorage('searchQuery', searchQuery);\n  }, [totalPages, page, moviesArray, searchQuery]);\n\n  useEffect(() => {\n    const getFetchSearchListMovies = async () => {\n      setPreLoader(true);\n      try {\n        const moviesArray = await fetchSearchMovie(searchQuery, page);\n        const totalMovies = moviesArray.total_results;\n        setTotalPages(moviesArray.total_pages);\n        if (totalMovies === 0) {\n          Notify.failure(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n          setSearchQuery('');\n        }\n        setPreLoader(false);\n        setMoviesArray(moviesArray.results);\n      } catch (error) {\n        console.log(error);\n        setPreLoader(false);\n      }\n    };\n    if (!searchQuery) {\n      return;\n    }\n    getFetchSearchListMovies();\n  }, [searchQuery, page]);\n\n  const handleChange = (event, value) => {\n    setPage(value);\n    listRef.current.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleInputSubmit = value => {\n    setSearchQuery(value);\n    setSearchParams(value !== '' ? { query: value } : '');\n    setMoviesArray([]);\n    setPage(1);\n    setTotalPages(0);\n    localStorage.clear();\n  };\n\n  return (\n    <main>\n      <Box ref={listRef} as=\"section\" paddingTop=\"20px\">\n        <Box>\n          <SearchBox onSubmit={handleInputSubmit} />\n          {preLoader && <Loader />}\n          {!preLoader && (\n            <>\n              {moviesArray && <MoviesList items={moviesArray} />}\n              {totalPages > 1 && (\n                <SearchPagination\n                  totalPages={totalPages}\n                  page={page}\n                  handleChange={handleChange}\n                />\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = 'b1c3a2089fd706f08956c6d7f55cc574';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies() {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n\n  const response = await axios.get(url);\n  return response.data;\n}\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport {\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchSearchMovie,\n  fetchMovieTrailer,\n};\n"],"names":["List","styled","Item","Img","Subtitle","items","location","useLocation","handleImageError","e","target","src","map","id","title","name","poster_path","posterPath","to","state","from","alt","width","height","onError","SearchIcon","BsSearch","Wrapper","Input","Button","onSubmit","useState","movieName","setMovieName","onReset","event","reset","trim","Notify","preventDefault","type","placeholder","value","onChange","StyledPagination","Pagination","display","justifyContent","gap","paddingBottom","color","borderColor","backgroundColor","handleChange","page","totalPages","Stack","spacing","variant","shape","count","preLoader","setPreLoader","useSearchParams","searchParams","setSearchParams","listRef","useRef","JSON","parse","window","localStorage","getItem","get","searchQuery","setSearchQuery","moviesArray","setMoviesArray","setPage","setTotalPages","setLocalStorage","key","setItem","stringify","useEffect","getFetchSearchListMovies","fetchSearchMovie","totalMovies","total_results","total_pages","results","console","log","Box","ref","as","paddingTop","query","clear","Loader","MoviesList","current","scrollIntoView","behavior","API_KEY","BASE_URL","fetchMovies","url","axios","response","data","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchMovieTrailer"],"sourceRoot":""}