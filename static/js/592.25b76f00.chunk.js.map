{"version":3,"file":"static/js/592.25b76f00.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","components/BackLink/BackLink.jsx","components/Trailer/Trailer.styled.js","components/Trailer/Trailer.jsx","pages/MovieDetails/MovieDetails.jsx","services/MoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { RiMovie2Line, RiTeamFill } from 'react-icons/ri';\nimport { AiFillYoutube } from 'react-icons/ai';\nimport { MdReviews } from 'react-icons/md';\n\nexport const MovieWrapper = styled.div`\n  padding: 0px 10px;\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    gap: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  padding: 10px 0;\n  display: flex;\n  gap: 10px;\n  flex-direction: column-reverse;\n  align-items: center;\n`;\n\nexport const Icon = styled(RiMovie2Line)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const ReviewsIcon = styled(MdReviews)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const CastIcon = styled(RiTeamFill)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const TrailerIcon = styled(AiFillYoutube)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n`;\n\nexport const TextVote = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  background-color: #000000;\n  color: white;\n  padding: 10px 12px;\n  border-radius: 5px;\n  font-size: 16px;\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  font-weight: 700;\n  font-size: 16px;\n  max-width: 600px;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n`;\nexport const Span = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n`;\n\nexport const TextLink = styled(Link)`\n  cursor: pointer;\n  display: flex;\n  text-transform: uppercase;\n  align-items: center;\n  color: white;\n  text-decoration-line: none;\n  gap: 5px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const LinkStyled = styled.a`\n  cursor: pointer;\n  display: flex;\n  text-transform: uppercase;\n  align-items: center;\n  color: white;\n  text-decoration-line: none;\n  gap: 5px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n  gap: 25px;\n  padding: 20px 0 40px 0;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: flex;\n  text-transform: uppercase;\n  align-items: center;\n  color: white;\n  text-decoration-line: none;\n  gap: 5px;\n  background: none;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 20px 0;\n  color: white;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const TrailerIframe = styled.iframe`\n  padding: 20px;\n  width: 640px;\n  height: 480px;\n  @media screen and (max-width: 480px) {\n    padding: 0px;\n    padding-bottom: 20px;\n    width: 320px;\n    height: 240px;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.9);\n  z-index: 1200;\n  animation: puff-in-center 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) both;\n  @-webkit-keyframes puff-in-center {\n    0% {\n      -webkit-transform: scale(2);\n      transform: scale(2);\n      -webkit-filter: blur(4px);\n      filter: blur(4px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: scale(1);\n      transform: scale(1);\n      -webkit-filter: blur(0px);\n      filter: blur(0px);\n      opacity: 1;\n    }\n  }\n  @keyframes puff-in-center {\n    0% {\n      -webkit-transform: scale(2);\n      transform: scale(2);\n      -webkit-filter: blur(4px);\n      filter: blur(4px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: scale(1);\n      transform: scale(1);\n      -webkit-filter: blur(0px);\n      filter: blur(0px);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ModalBox = styled.div`\n  max-width: calc(100vw);\n  max-height: calc(100vh);\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieTrailer } from 'services/MoviesApi';\nimport { TrailerIframe, Overlay, ModalBox } from './Trailer.styled';\nimport { createPortal } from 'react-dom';\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Trailer = ({ onToggleModal }) => {\n  const [trailerKey, setTrailerKey] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getFetchMovies = async () => {\n      try {\n        const movieTrailer = await fetchMovieTrailer(id);\n        const movieTrailerLength =\n          movieTrailer.results[movieTrailer.results.length - 1];\n        setTrailerKey(movieTrailerLength.key);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (!trailerKey) {\n      return;\n    }\n\n    getFetchMovies();\n  }, [id, trailerKey]);\n\n  const onBackdropCloseModal = event => {\n    if (event.target === event.currentTarget) {\n      onToggleModal();\n    }\n  };\n\n  useEffect(() => {\n    const onCloseModal = event => {\n      if (event.code === 'Escape') {\n        onToggleModal();\n      }\n    };\n\n    window.addEventListener('keydown', onCloseModal);\n\n    return () => {\n      window.removeEventListener('keydown', onCloseModal);\n    };\n  }, [onToggleModal]);\n\n  const trailerLink = `https://www.youtube.com/embed/${trailerKey}`;\n\n  return createPortal(\n    <Overlay onClick={onBackdropCloseModal}>\n      <ModalBox>\n        <TrailerIframe\n          width=\"375\"\n          height=\"478\"\n          src={trailerLink}\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n          allowFullScreen\n        />\n      </ModalBox>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Trailer;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieDetails } from 'services/MoviesApi';\nimport {\n  Title,\n  Img,\n  Text,\n  TextLink,\n  TextVote,\n  Span,\n  Icon,\n  ReviewsIcon,\n  LinkBox,\n  CastIcon,\n  MovieWrapper,\n  Button,\n  TrailerIcon,\n} from './MovieDetails.styled';\nimport BackLink from '../../components/BackLink';\nimport Box from 'components/Box';\nimport Loader from 'components/Loader';\nimport Trailer from 'components/Trailer';\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { id } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const backLinkHref = location.state?.from ?? '/';\n  const { title, overview, release_date, poster_path, vote_average } = movies;\n  const posterPath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n\n  const onToggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    const getFetchMovies = async () => {\n      try {\n        const movies = await fetchMovieDetails(id);\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getFetchMovies();\n  }, [id]);\n\n  return (\n    <main>\n      <Box as=\"section\" paddingTop=\"20px\" textAlign=\"center\">\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <BackLink to={backLinkHref}>Back to movies</BackLink>\n          <MovieWrapper>\n            {poster_path ? (\n              <Img src={posterPath} width=\"300\" height=\"450\" alt=\"\" />\n            ) : (\n              <p>Poster not found</p>\n            )}\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n              <Title>\n                {title ? title : <p>Not info</p>}\n                {vote_average && (\n                  <TextVote>\n                    <Icon />\n                    {vote_average.toFixed(1)}\n                  </TextVote>\n                )}\n              </Title>\n              {release_date && (\n                <Text>\n                  Release date: <Span>{release_date}</Span>\n                </Text>\n              )}\n              {overview && (\n                <Text>\n                  Overview: <br /> <Span>{overview}</Span>\n                </Text>\n              )}\n              <LinkBox display=\"flex\" gap=\"30\">\n                <TextLink to=\"cast\" state={{ from: backLinkHref }}>\n                  <CastIcon /> Cast\n                </TextLink>\n                <TextLink to=\"reviews\" state={{ from: backLinkHref }}>\n                  <ReviewsIcon /> Reviews\n                </TextLink>\n                <Button onClick={() => onToggleModal()}>\n                  <TrailerIcon /> Trailer\n                </Button>\n              </LinkBox>\n            </Box>\n          </MovieWrapper>\n          {showModal && <Trailer onToggleModal={onToggleModal} />}\n        </Box>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Box>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = 'b1c3a2089fd706f08956c6d7f55cc574';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies() {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n\n  const response = await axios.get(url);\n  return response.data;\n}\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport {\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchSearchMovie,\n  fetchMovieTrailer,\n};\n"],"names":["MovieWrapper","styled","Title","Icon","RiMovie2Line","ReviewsIcon","MdReviews","CastIcon","RiTeamFill","TrailerIcon","AiFillYoutube","Img","TextVote","Text","Span","TextLink","Link","LinkBox","Button","StyledLink","to","children","size","TrailerIframe","Overlay","ModalBox","modalRoot","document","querySelector","onToggleModal","useState","trailerKey","setTrailerKey","id","useParams","useEffect","getFetchMovies","fetchMovieTrailer","movieTrailer","movieTrailerLength","results","length","key","console","log","onCloseModal","event","code","window","addEventListener","removeEventListener","trailerLink","createPortal","onClick","target","currentTarget","width","height","src","title","frameBorder","allow","allowFullScreen","location","useLocation","movies","setMovies","showModal","setShowModal","backLinkHref","state","from","overview","release_date","poster_path","vote_average","posterPath","fetchMovieDetails","Box","as","paddingTop","textAlign","display","flexDirection","alignItems","alt","toFixed","gap","Suspense","fallback","Loader","API_KEY","BASE_URL","fetchMovies","url","axios","response","data","fetchMovieCast","fetchMovieReviews","fetchSearchMovie","query","page"],"sourceRoot":""}