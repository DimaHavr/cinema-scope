{"version":3,"file":"static/js/607.499f5b40.chunk.js","mappings":"8QAEaA,EAAWC,EAAAA,GAAAA,EAAH,+bAoBRC,EAAOD,EAAAA,GAAAA,GAAH,kWAkBJE,EAAOF,EAAAA,GAAAA,EAAH,mGAMJG,EAAOH,EAAAA,GAAAA,EAAH,gGAKJI,EAAOJ,EAAAA,GAAAA,GAAH,wc,SCSjB,EAtDgB,WACd,OAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEQC,EAAAA,EAAAA,IAAkBJ,GAF1B,OAEbF,EAFa,OAGnBC,EAAgBD,EAAaO,SAC7BC,OAAOC,SAAS,EAAG,KAJA,gDAMnBC,QAAQC,IAAR,MANmB,yDAAH,qDAUfX,GAILK,GACD,GAAE,CAACH,EAAIF,KAGN,UAACY,EAAA,EAAD,CAAKC,QAAQ,OAAb,WACE,SAACpB,EAAD,uBACA,SAACE,EAAD,UACIK,GAAwC,IAAxBA,EAAac,OAG7Bd,EAAae,KAAI,YAAmC,IAAhCb,EAA+B,EAA/BA,GAAIc,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACpC,OACE,UAACpB,EAAD,YACE,UAACF,EAAD,sBAEE,UAACC,EAAD,CACEsB,QAAS,WACPX,OAAOC,SAAS,EAAG,IACpB,EACDW,KAAMJ,EACNK,OAAO,SALT,cAOIH,SAGN,SAACtB,EAAD,UAAOqB,MAbEf,EAgBd,KApBD,SAACN,EAAD,4BAyBT,C,2NCzDK0B,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6FACQR,EADR,UACiBO,EADjB,qCACsDD,GADtD,SAGyBG,EAAAA,EAAAA,IAAUT,GAHnC,cAGQU,EAHR,yBAISA,EAASC,MAJlB,kEAOA,IAAMC,EAAiB,mCAAG,WAAM1B,GAAN,uFACDuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACArB,EADA,oBACcoB,EADd,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBE,EAAc,mCAAG,WAAM3B,GAAN,uFACEuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACArB,EADA,4BACsBoB,EADtB,oBADF,cACfI,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOdrB,EAAiB,mCAAG,WAAMJ,GAAN,uFACDuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACArB,EADA,4BACsBoB,EADtB,2BADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOjBG,EAAgB,mCAAG,WAAOC,EAAOC,GAAd,uFACAP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,gCAC8CU,EAD9C,kBAC4DD,IAF5D,cACjBL,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,wDAOhBM,EAAiB,mCAAG,WAAM/B,GAAN,uFACDuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACArB,EADA,2BACqBoB,EADrB,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/MoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Subtitle = styled.p`\n  text-align: center;\n  font-weight: 700;\n  font-size: 36px;\n  animation: slide-in-fwd-center 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n\n  @keyframes slide-in-fwd-center {\n    0% {\n      -webkit-transform: translateZ(-1400px);\n      transform: translateZ(-1400px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0 5px 30px 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  justify-content: center;\n  list-style-type: none;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n  }\n`;\n\nexport const Text = styled.p`\n  gap: 10px;\n  padding: 10px;\n  text-align: start;\n  max-width: 600px;\n`;\nexport const Link = styled.a`\n  text-decoration-line: none;\n  font-weight: 500;\n  font-size: 16px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  animation: slide-in-fwd-center 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n\n  @keyframes slide-in-fwd-center {\n    0% {\n      -webkit-transform: translateZ(-1400px);\n      transform: translateZ(-1400px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'services/MoviesApi';\nimport Box from '../Box';\nimport { List, Text, Link, Item, Subtitle } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getFetchMovies = async () => {\n      try {\n        const movieReviews = await fetchMovieReviews(id);\n        setMovieReviews(movieReviews.results);\n        window.scrollBy(0, 400);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (!movieReviews) {\n      return;\n    }\n\n    getFetchMovies();\n  }, [id, movieReviews]);\n\n  return (\n    <Box padding=\"20px\">\n      <Subtitle>Reviews</Subtitle>\n      <List>\n        {!movieReviews || movieReviews.length === 0 ? (\n          <Text>Not found</Text>\n        ) : (\n          movieReviews.map(({ id, url, content, author }) => {\n            return (\n              <Item key={id}>\n                <Text>\n                  Author:\n                  <Link\n                    onClick={() => {\n                      window.scrollBy(0, 200);\n                    }}\n                    href={url}\n                    target=\"_blank\"\n                  >\n                    @{author}\n                  </Link>\n                </Text>\n                <Text>{content}</Text>\n              </Item>\n            );\n          })\n        )}\n      </List>\n    </Box>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = 'b1c3a2089fd706f08956c6d7f55cc574';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies() {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n\n  const response = await axios.get(url);\n  return response.data;\n}\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport {\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchSearchMovie,\n  fetchMovieTrailer,\n};\n"],"names":["Subtitle","styled","List","Text","Link","Item","useState","movieReviews","setMovieReviews","id","useParams","useEffect","getFetchMovies","fetchMovieReviews","results","window","scrollBy","console","log","Box","padding","length","map","url","content","author","onClick","href","target","API_KEY","BASE_URL","fetchMovies","axios","response","data","fetchMovieDetails","fetchMovieCast","fetchSearchMovie","query","page","fetchMovieTrailer"],"sourceRoot":""}