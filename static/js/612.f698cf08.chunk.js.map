{"version":3,"file":"static/js/612.f698cf08.chunk.js","mappings":"2MAEaA,EAAOC,EAAAA,GAAAA,GAAH,iWAkBJC,EAAOD,EAAAA,GAAAA,GAAH,6lBAyBJE,EAAMF,EAAAA,GAAAA,IAAH,kjBAwBHG,EAAWH,EAAAA,GAAAA,GAAH,gN,mBCnCrB,EA9BmB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,GACCA,EAAMG,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtBC,EAAU,0CAAsCD,GACtD,OACE,SAACV,EAAD,WACE,UAAC,KAAD,CAAMY,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMV,GAA1C,WACE,SAACH,EAAD,CACEc,IAAKJ,EACLK,IAAG,OAAER,QAAF,IAAEA,EAAAA,EAASC,EACdQ,MAAM,MACNC,OAAO,MACPC,QAAS,SAAAC,GACPA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAON,IAAMQ,0BAChB,KAEH,SAACrB,EAAD,iBAAWM,QAAX,IAAWA,EAAAA,EAASC,QAZbF,EAgBd,KAGR,C,qHC9BYiB,EAAQzB,EAAAA,GAAAA,GAAH,ydAqBLE,EAAMF,EAAAA,GAAAA,IAAH,sZAkBH0B,EAAO1B,EAAAA,GAAAA,EAAH,0G,mBCPjB,EA7ByB,WACvB,IAAQ2B,GAAmBC,EAAAA,EAAAA,KAAnBD,eACR,OACE,UAACE,EAAA,EAAD,YACE,SAACJ,EAAD,8BACCE,EAAeG,OAAS,GACvB,SAACC,EAAA,QAAD,CAAY3B,MAAOuB,KAEnB,UAACE,EAAA,EAAD,CACEG,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXC,IAAI,OAJN,WAME,SAACjC,EAAD,CACEc,IAAKQ,2BACLP,IAAI,SACJC,MAAM,MACNC,OAAO,SAET,SAACU,EAAA,EAAD,WACE,SAACH,EAAD,yCAMX,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/UserFavoritePage/UserFavoritePage.styled.js","components/UserFavoritePage/UserFavoritePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1 1 1;\n  justify-content: center;\n  gap: 35px;\n  list-style-type: none;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    flex: 1 1 1;\n  }\n`;\n\nexport const Item = styled.li`\n  text-decoration: none;\n  text-decoration-line: none;\n  text-align: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  animation: slide-in-fwd-center 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n  :hover,\n  :focus {\n    border-radius: 10px;\n    transform: scale(1.05);\n  }\n  @keyframes slide-in-fwd-center {\n    0% {\n      -webkit-transform: translateZ(-1400px);\n      transform: translateZ(-1400px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  padding: 10px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  animation: slide-in-fwd-center 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n  }\n  @keyframes slide-in-fwd-center {\n    0% {\n      -webkit-transform: translateZ(-1400px);\n      transform: translateZ(-1400px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  padding: 10px;\n  color: #fff;\n  max-width: 230px;\n  margin: 0 auto;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: orangered;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, Img, Subtitle } from './MoviesList.styled';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {items &&\n        items.map(({ id, title, name, poster_path }) => {\n          const posterPath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={posterPath}\n                  alt={title ?? name}\n                  width=\"250\"\n                  height=\"350\"\n                  onError={e => {\n                    e.target.onerror = null;\n                    e.target.src = process.env.PUBLIC_URL + '/empty.webp';\n                  }}\n                />\n                <Subtitle>{title ?? name}</Subtitle>\n              </Link>\n            </Item>\n          );\n        })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: white;\n  text-align: center;\n  text-transform: uppercase;\n  padding: 30px 0;\n  animation: slide-in-fwd-center 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n\n  @keyframes slide-in-fwd-center {\n    0% {\n      -webkit-transform: translateZ(-1400px);\n      transform: translateZ(-1400px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  animation: slide-in-fwd-center 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n\n  @keyframes slide-in-fwd-center {\n    0% {\n      -webkit-transform: translateZ(-1400px);\n      transform: translateZ(-1400px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Text = styled.p`\n  font-weight: 700;\n  font-size: 16px;\n  text-align: center;\n  padding: 10px;\n`;\n","import { useStateContext } from '../../context/StateContext';\nimport MoviesList from 'components/MoviesList';\nimport { Title, Text, Img } from './UserFavoritePage.styled';\nimport Box from 'components/Box';\n\nconst UserFavoritePage = () => {\n  const { favoriteMovies } = useStateContext();\n  return (\n    <Box>\n      <Title>Favorite movies</Title>\n      {favoriteMovies.length > 0 ? (\n        <MoviesList items={favoriteMovies} />\n      ) : (\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          gap=\"10px\"\n        >\n          <Img\n            src={process.env.PUBLIC_URL + '/empty.webp'}\n            alt=\"minion\"\n            width=\"253\"\n            height=\"341\"\n          />\n          <Box>\n            <Text>Ouhh... it's empty!</Text>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default UserFavoritePage;\n"],"names":["List","styled","Item","Img","Subtitle","items","location","useLocation","map","id","title","name","poster_path","posterPath","to","state","from","src","alt","width","height","onError","e","target","onerror","process","Title","Text","favoriteMovies","useStateContext","Box","length","MoviesList","display","flexDirection","alignItems","gap"],"sourceRoot":""}